apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: database
  labels:
    app: rocketchat-database
spec:
  # modify replicas according to your case
  replicas: 1
  selector:
    matchLabels:
      app: rocketchat-database
  template:
    metadata:
      labels:
        app: rocketchat-database
    spec:
      containers:
        - name: rocketchat-database
          image: mongo
          command: ["/bin/sh", "-c"]
          args: ["mongod --smallfiles --oplogSize 128 --bind_ip_all"]
          ports:
            - name: mongo
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: rocketchat-storage
              mountPath: /data/db
      volumes:
        - name: rocketchat-storage
          emptyDir: {}
